@model GestorDeTarefas.ViewModels.ProjetoSprintListViewModel

@{
    ViewData["Title"] = "Adicionar colaboradores";
}

<h1>Adicionar colaboradores ao Projeto Sprint Design</h1>

<h4>ProjetoSprintDesign</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AdicionarColaboradores">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID_P_Design" />
            <div class="form-group">
                <label asp-for="NomeProjeto" class="control-label">Nome do Projeto</label>
                <input asp-for="NomeProjeto" class="form-control" />
                <span asp-validation-for="NomeProjeto" class="text-danger"></span> 
            </div>
            
            <div class="form-group">
                <dt class="col-sm-10">
                    @Html.LabelFor(model => model.Colaboradores, new { @class = "control-label col-md-2" })
                    </dt>
                    <div class="col-md-10">
                        @for (int i = 0; i < Model.Colaboradores.Count(); i++)
                        {
                    <dd class="col-sm-10">
                        @Html.EditorFor(m => Model.Colaboradores[i].Checked)

                        @Html.DisplayFor(m => Model.Colaboradores[i].Name)

                        @Html.HiddenFor(m => Model.Colaboradores[i].Name)
                        @Html.HiddenFor(m => Model.Colaboradores[i].Id)
                    </dd>
                }

                        </div>
                    </div>
            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-success">Voltar a lista</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
