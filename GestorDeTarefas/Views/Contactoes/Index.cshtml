@model ContactoListViewModel

@{
    ViewData["Title"] = "Lista dos contactos";
}



<div class=" table-responsive">

        <table class="table table-bordered" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th scope="col">Nome</th>
                    <th scope="col">Verificado</th>
                    <th scope="col">Assunto</th>
                    <th scope="col">Opções</th>
                </tr>
            </thead>
            <tbody>
                <tr>                   
                    <td>
                        @foreach (var item in Model.Contacto)
                        {
                            <dd>
                                @Html.DisplayFor(m => item.Nome)
                            </dd>
                        }
                        </td>
                    <td>
                        @foreach (var item in Model.Contacto)
                        {
                            <dd>
                                @Html.DisplayFor(m => item.Verificado)
                            </dd>
                        }
                        </td>
                    <td>
                        @foreach (var item in Model.Contacto)
                        {
                            <dd>
                                @Html.DisplayFor(m => item.Assunto)
                            </dd>
                        }
                        </td>
                    <td>
                        @foreach (var item in Model.Contacto)
                        {
                            <dd>
                                <a class="btn btn-info" asp-action="Details" asp-route-id="@item.ContactoId">Detalhes</a>
                            </dd>
                        }
                        </td>
                            
                        

                    </tr>
            </tbody>
        </table>


        <div class="form-group">
            <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Sair</a>
        </div>
    
</div>


<nav class="mt-3">
    <ul class="pagination">
        @{
            if (Model.PagingInfo.CurrentPage == 1)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1">Primeiro</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="1">Primeiro</a>
                </li>
            }

            int firstPage = Model.PagingInfo.CurrentPage - PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
            if (firstPage < 1) firstPage = 1;

            int lastPage = Model.PagingInfo.CurrentPage + PagingInfo.NUMBER_PAGES_SHOW_BEFORE_AFTER;
            if (lastPage > Model.PagingInfo.TotalPages) lastPage = Model.PagingInfo.TotalPages;

            for (int p = firstPage; p <= lastPage; p++)
            {
                if (p == Model.PagingInfo.CurrentPage)
                {
                    <li class="page-item active">
                        <a class="page-link" href="#">@p <span class="sr-only">(current)</span></a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@p">@p</a>
                    </li>
                }
            }

            if (Model.PagingInfo.CurrentPage == Model.PagingInfo.TotalPages)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1">Ultimo</a>
                </li>
            }
            else
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@Model.PagingInfo.TotalPages">Ultimo</a>
                </li>
            }
        }
    </ul>
</nav>

